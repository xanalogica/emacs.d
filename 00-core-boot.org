#+TITLE: 00-core-boot
#+DESCRIPTION: Core config for startup, secrets, runtime defaults
#+STARTUP: overview

#+BEGIN_SRC emacs-lisp :exports none
;;; 00-core-boot.el --- Foundational Emacs config -*- lexical-binding: t -*-
#+END_SRC

* Insure I'm Running an Acceptable Version of Org

#+CAPTION: Verify what Org Version I'm Running
#+BEGIN_SRC emacs-lisp
(defun xan/check-org-version-min (min-version)
  "Check Org version is >= MIN-VERSION."
  (let* ((org-path (find-library-name "org"))
         (actual-version (org-version))) ;; ← no second arg
    (message "[org-check] Org version: %s" actual-version)
    (message "[org-check] Org library path: %s" org-path)
    (cond
     ((version< actual-version min-version)
      (warn "[org-check] ⛔ Org version too old! Require ≥ %s, but got %s"
            min-version actual-version))
     ((string-match-p "/straight/repos/org-mode/" org-path)
      (message "[org-check] ✅ Org is installed via straight.el (Git version)."))
     ((string-match-p "/emacs/[0-9.]+/lisp/org/" org-path)
      (message "[org-check] ✅ Org is the built-in Emacs version."))
     (t
      (warn "[org-check] ⚠ Org source is non-standard: %s" org-path)))))

  ;; Automatically run this check after Org is loaded
  (with-eval-after-load 'org
    (xan/check-org-version-min "9.7.11"))
#+END_SRC

* Insure All My Variable Blocks in My Org Files Are Properly Terminated

#+CAPTION: Report Improperly Terminated Variable Blocks
#+BEGIN_SRC emacs-lisp
(defun xan/check-org-local-variable-blocks (&optional dir)
  "Check for org files in DIR (default: user-emacs-directory) with invalid Local Variables blocks."
  (let* ((root (or dir user-emacs-directory))
         (org-files (directory-files-recursively root "\\.org$"))
         (bad-files '()))
    (dolist (file org-files)
      (with-temp-buffer
        (insert-file-contents file)
        (goto-char (point-min))
        (when (re-search-forward "^[#;]+[ \t]*Local Variables:" nil t)
          (unless (re-search-forward "^[#;]+[ \t]*End:" nil t)
            (push file bad-files)))))
    (when bad-files
      (message "⚠ Org files with malformed Local Variables block:")
      (dolist (f (reverse bad-files))
        (message " - %s" f)))
    bad-files))

  (add-hook 'emacs-startup-hook
    (lambda ()
      (xan/check-org-local-variable-blocks user-emacs-directory)
      ;;; (xan/check-org-local-variable-blocks
      ;;;   (expand-file-name "cache/tangled/" user-emacs-directory))
    )
  )
#+END_SRC

#+BEGIN_SRC emacs-lisp :exports none
  (provide '00-core-boot)
  ;;; 00-core-boot.el ends here
#+END_SRC
